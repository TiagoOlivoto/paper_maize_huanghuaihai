d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.rows = c(me1, me2, me3),
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
e1, me2, me3)
e1, me2, me3)
c(me1, me2, me3)
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.rows = c(me1, me2, me3),
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
distances[[2]]
which(rownames(distances[[2]]) == c(me1, me2, me3))
which(rownames(distances[[2]])  %in%  c(me1, me2, me3))
c(me1, me2, me3)
rownames(distances[[2]]) %in%  c(me1, me2, me3)
which(rownames(distances[[2]])) %in%  c(me1, me2, me3)
which(rownames(distances[[2]]) %in%  c(me1, me2, me3))
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.rows = which(rownames(distances[[2]]) %in%  c(me1, me2, me3)),
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
rownames(distances[[2]])
?superheat
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.cols  = which(rownames(distances[[2]]) %in%  c(me1, me2, me3)),
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
order_col <-
which(rownames(distances[[2]]) %in%  c(me1, me2, me3))
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.cols  = order_col,
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
ggsave(filename = "figs/fig2_heat_env.png",
plot = d$plot,
width = 10,
height = 10)
order_col
me1
rownames(distances)
rownames(distances[[2]])
20:1
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.cols  = 20:1,
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
# pretty.order.cols = TRUE,
col.dendrogram = TRUE,
order.cols  = 20:1,
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
ggsave(filename = "figs/fig2_heat_env.png",
plot = d$plot,
width = 10,
height = 10)
cor(env_data_me$etp, env_data_me$sihs)
View(mtsi_global)
View(mtsi_global[["stat_dif_trait"]])
8/9
# Chunk 1: global_options
knitr::opts_chunk$set(cache = FALSE,
comment = "##",
collapse = TRUE,
warning = FALSE,
message = FALSE)
# Chunk 2
# it is suggested to use the dev version of metan package
# remotes::install_github("TiagoOlivoto/metan")
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(tidyverse)
library(metan)
library(rnaturalearth)
# a ggplot2 theme for the plots
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
df_traits <-
import("https://bit.ly/df_traits") |>
metan::as_factor(1:3)
# grain yield mean in each environment
df_gy <-
df_traits |>
means_by(ENV, .vars = GY)
View(df_traits)
df_traits |> means_by(me)
df_traits |> means_by(ENV)
df_traits |> means_by(me)
library(metan)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"))
plot(mod)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"), scaling = 0)
plot(mod)
data_ge2
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"))
plot(mod)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"), svp = 1)
plot(mod)
library(tidyverse)
df <- clipr::read_clip()
df <- metan::clip_read()
View(df)
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - media)
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean)
View(df2)
ggplot(df2, aes(desvio)) + geom_point()
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = 1:15)
df2
ggplot(df2, aes(desvio, id)) + geom_point()
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = paste("Planta", 1:15))
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = as.factor(paste("Planta", 1:15)),
id = fct_relevel(id, paste("Planta", 1:15)))
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
desc_stat(df2, planta)
d <- desc_stat(df2, planta)
View(d)
max(df2$planta)
20-5.8
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.2)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.1)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação à média da altura de planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = as.factor(paste("Muda", 1:15)),
id = fct_relevel(id, paste("Muda", 1:15)))
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação à média da altura de planta (cm)",
y = "Muda")
10-4.2
10+4.2
View(df)
View(df2)
rio::export(df2, "test.xlsx")
getwd()
qt(0.975, 14)
2.144787 * 0.7758
1/4+3/4
3/4
library(pliman)
library(pliman)
library(rio)
set_wd_here()
df <- import("area_foliar.xlsx")
View(df)
df |> select_non_numeric_cols()
df |> select_non_numeric_cols() |> Image()
df |> select_non_numeric_cols() |> image()
df |> select_non_numeric_cols() |> as.matrix() |> image()
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols() |>
as.matrix() |>
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
library(pliman)
library(rio)
set_wd_here()
df <- import("area_foliar.xlsx")
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
library(metan)
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
mat <-
df |>
select_non_numeric_cols() |>
as.matrix()
image(mat)
View(mat)
mat <-
df |>
select_numeric_cols() |>
as.matrix()
image(mat)
image(t(mat))
