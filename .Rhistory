# plot the distribution of envirotypes for dbp
variable <- "RH"
p5 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "PRECTOT"
# plot the distribution of envirotypes for dbp
variable <- "PRECTOT"
p6 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
arrange_ggplot(p4, p3, p5, p6,
ncol = 1,
tag_levels = "A")
p6
View(out)
out <-
env_data_trial |>
concatenate(ME, YEAR, .after = YEAR, new_var = env) |>
env_typing(env.id = c("YEAR, ME"),
var.id = c("TMIN", "TMAX", "RH", "PRECTOT"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 120),
names.window = names.window,
quantiles = c(.01, .25, .50, .75, .975, .99)) |>
separate(env, into = c("ME", "YEAR")) |>
separate(env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# plot the distribution of envirotypes for dbp
variable <- "TMIN"
p3 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "TMAX"
p4 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "RH"
p5 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "PRECTOT"
p6 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
p6
View(env_data_trial)
out <-
env_data_trial |>
concatenate(ME, YEAR, .after = YEAR, new_var = env) |>
env_typing(env.id = c("YEAR, ME"),
var.id = c("TMIN", "TMAX", "RH", "PRECTOT", "WS"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 120),
names.window = names.window,
quantiles = c(.01, .25, .50, .75, .975, .99)) |>
separate(env, into = c("ME", "YEAR")) |>
separate(env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# plot the distribution of envirotypes for dbp
variable <- "WS"
# p3 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
env_data_trial <- import("data/env_data_trial.xlsx")
names_var <- names(env_data_trial)[11:ncol(env_data_trial)]
pca1 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
concatenate(ME, YEAR, .after = YEAR) |>
remove_cols(ME) |>
column_to_rownames("new_var")
df_traits <-
import("data/df_traits.csv") |>
metan::as_factor(1:6)
# long data
df_traits_long <-
df_traits |>
pivot_longer(GMC:HSW)
# grain yield mean in each environment
df_gy <-
df_traits |>
mean_by(ME, YEAR, .vars = GY)
# genotypic variance in each mega-environment
df_var_gy <-
df_traits |>
group_by(YEAR, ME) |>
do(lmer(GY ~(1|GEN), data = .) |>
tidy(effects = "ran_pars") |>
filter(group == "GEN") |>
transmute(var = estimate^2))
env_data_trial <- import("data/env_data_trial.xlsx")
names_var <- names(env_data_trial)[11:ncol(env_data_trial)]
pca1 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
concatenate(ME, YEAR, .after = YEAR) |>
remove_cols(ME) |>
column_to_rownames("new_var")
pca2 <-
env_data_trial |>
mean_by(ME, .vars = names_var) |>
left_join(df_gy |> mean_by(ME)) |>
left_join(df_var_gy|> mean_by(ME)) |>
column_to_rownames("ME")
pca1
pca2
env_data_trial
pca1
env_data_trial
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2)
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019)
pca_2019 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2019
pca_2020 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2020) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2019
pca2019 <- PCA(pca_2019,
# quali.sup = 1,
graph = FALSE)
pca2020 <- PCA(pca_2020,
# quali.sup = 1,
graph = FALSE)
bip1 <-
fviz_pca_biplot(pca2019,
repel = TRUE,
# habillage = 1,
col.var = "steelblue",
title = NULL) +
coord_equal()
bip2 <-
fviz_pca_biplot(pca2020,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal()
arrange_ggplot(bp1, bip1, bip2,
tag_levels = "A")
arrange_ggplot(bip1, bip2,
tag_levels = "A")
env_data_m <-
env_data |>
select(-daysFromStart) |>
mean_by(me, .vars = TMED:RTA) |>
column_to_rownames("me")
env_data <- readRDS("data/env_data.Rdata")
info <-
env_data |>
dplyr::select(env, LON, LAT) |>
mean_by(env)
df_gy_loc <-
df_traits |>
mean_by(LOC, .vars = GY)
env_wider <-
env_data |>
select(env, year, daysFromStart, TMED:RTA) |>
pivot_wider(names_from = "year",
values_from = TMED:RTA) |>
left_join(info) |>
relocate(LON, LAT, .after = env) |>
mutate(MM = 1,
DD = 1,
DOY = 1,
YYYYMMDD = 1,
YEAR = 1,
.after = env) |>
left_join(df_gy_loc, by = c("env" = "LOC"))
saveRDS(env_wider, "data/env_wider.Rdata")
env_data_m <-
env_data |>
select(-daysFromStart) |>
mean_by(me, .vars = TMED:RTA) |>
column_to_rownames("me")
env_data <-
env_data |>
mutate(me = case_when(
env %in% c("Yicheng") ~ "ME1",
env %in% c("Suixi", "Jieshou", "Nanyang") ~ "ME2",
env %in% c("Shenzhou", "Gaocheng", "Handan", "Dezhou") ~ "ME3",
env %in% c("Laizhou", "Jinan") ~ "ME4"
),
.after = env)
env_data_m <-
env_data |>
select(-daysFromStart) |>
mean_by(me, .vars = TMED:RTA) |>
column_to_rownames("me")
# compute the PCA with
pca_model_h <- PCA(env_data_m,
graph = FALSE)
bp1 <-
fviz_pca_biplot(pca_model_h,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal()
names_var <- names(env_data_trial)[11:ncol(env_data_trial)]
pca1 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
concatenate(ME, YEAR, .after = YEAR) |>
remove_cols(ME) |>
column_to_rownames("new_var")
pca2 <-
env_data_trial |>
mean_by(ME, .vars = names_var) |>
left_join(df_gy |> mean_by(ME)) |>
left_join(df_var_gy|> mean_by(ME)) |>
column_to_rownames("ME")
pca_2019 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2020 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2020) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2019 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2020 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2020) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_model <- PCA(pca1,
quali.sup = 1,
graph = FALSE)
pca_model2 <- PCA(pca2,
graph = FALSE)
pca2019 <- PCA(pca_2019,
graph = FALSE)
pca2020 <- PCA(pca_2020,
graph = FALSE)
pca_2019 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2020 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2020) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca2 <-
env_data_trial |>
mean_by(ME, .vars = names_var) |>
left_join(df_gy |> mean_by(ME)) |>
left_join(df_var_gy|> mean_by(ME)) |>
column_to_rownames("ME")
pca_model2 <- PCA(pca2,
graph = FALSE)
pca2019 <- PCA(pca_2019,
graph = FALSE)
pca2020 <- PCA(pca_2020,
graph = FALSE)
pca_model2 <- PCA(pca2,
graph = FALSE)
bip1 <-
fviz_pca_biplot(pca2019,
repel = TRUE,
# habillage = 1,
col.var = "steelblue",
title = NULL) +
coord_equal()
bip2 <-
fviz_pca_biplot(pca2020,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal()
bip3 <-
fviz_pca_biplot(pca_model2,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal()
arrange_ggplot(bp1, bip1, bip2, bip3
tag_levels = "A")
arrange_ggplot(bp1, bip1, bip2, bip3,
tag_levels = "A")
bp1
bip1
bip2
bip3
arrange_ggplot(bp1, bip1, bip2, bip3,
tag_levels = "A")
ggsave("figs/fig3_pca.png", width = 15, height = 15)
ggsave("figs/fig3_pca.png", width = 11, height = 11)
