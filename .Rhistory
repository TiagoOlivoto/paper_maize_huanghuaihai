.after = env)
env_data_m <-
env_data |>
select(-daysFromStart) |>
mean_by(env, .vars = T2M:RTA) |>
column_to_rownames("env")
# compute the PCA with
pca_model <- PCA(env_data_m,
quali.sup = 1,
graph = FALSE)
fviz_contrib(pca_model, "var")
id_var <- names(env_data)[11:ncol(env_data)]
names.window <- c('May','June','July','August','September', "October")
out <-
env_data |>
select(-c(env, year)) |>
rename(env = me) |>
env_typing(env.id = "env",
var.id = id_var,
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 120),
names.window = names.window,
quantiles = c(.01, .25, .50, .75, .975, .99)) |>
separate(env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# plot the distribution of envirotypes for dbp
variable <- "RTA"
# p1 <-
out |>
subset(var == variable) |> # change the variable here
mutate(interval = fct_relevel(interval, month.name[5:10])) |>
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_wrap(~interval, scales = "free", nrow = 6)+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "N"
# p1 <-
out |>
subset(var == variable) |> # change the variable here
mutate(interval = fct_relevel(interval, month.name[5:10])) |>
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_wrap(~interval, scales = "free", nrow = 6)+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
blue_mean <-
df_traits_long |>
mean_by(name, ME, GEN, .vars = value)
ovmean <-
df_traits_long |>
mean_by(name, ME, .vars = value)
# selected
selected <-
blue_mean |>
mutate(selected = case_when(
ME == "ME1" & GEN %in% selm1 ~ "yes",
ME == "ME2" & GEN %in% selm2 ~ "yes",
ME == "ME3" & GEN %in% selm3 ~ "yes",
ME == "ME4" & GEN %in% selm4 ~ "yes",
TRUE ~ "no"
)) |>
mean_by(name, ME, selected) |>
filter(selected == "yes")
# mean performance and stability
mper <-
waas %>%
mutate(mps = map(data, ~.x %>% .[["mps_ind"]])) |>
unnest(mps) |>
select(-data) |>
nest(data = GEN:HSW)
# mean performance and stability
mper <-
waas %>%
mutate(mps = map(data, ~.x %>% .[["mps_ind"]])) |>
unnest(mps) |>
select(-data) |>
nest(data = GEN:HSW)
waas <-
df_traits_long |>
select(-REP) |>
pivot_wider(names_from = name, values_from = value) |>
group_by(ME) |>
doo(~mps(.,
env = YEAR,
gen = GEN,
rep = REP2,
resp = GMC:HSW,
ideotype_mper = c("l, l, l, l, h, h, h, h, h"),
wmper = 70,
performance = "blueg",
stability = "ecovalence"))
# mean performance and stability
mper <-
waas %>%
mutate(mps = map(data, ~.x %>% .[["mps_ind"]])) |>
unnest(mps) |>
select(-data) |>
nest(data = GEN:HSW)
## MGIDI applied to the WAASBY values (all)
mgidi <-
mper |>
mutate(mgidi = map(data,
~.x |>
column_to_rownames("GEN") |>
mgidi(SI = 25,
weights = c(1,1,1,1,5,1,1,1,1))))
p1 <- plot(mgidi$mgidi[[1]], SI = 25, y.lab = "MGIDI")
p2 <- plot(mgidi$mgidi[[2]], SI = 25, y.lab = "MGIDI")
p3 <- plot(mgidi$mgidi[[3]], SI = 25, y.lab = "MGIDI")
p4 <- plot(mgidi$mgidi[[4]], SI = 25, y.lab = "MGIDI")
arrange_ggplot(p1, p2, p3, p4,
guides = "collect",
tag_levels = "A",
ncol = 4)
# selected genotypes
selm1 <- sel_gen(mgidi$mgidi[[1]])
selm2 <- sel_gen(mgidi$mgidi[[2]])
selm3 <- sel_gen(mgidi$mgidi[[3]])
selm4 <- sel_gen(mgidi$mgidi[[4]])
venn_plot(selm1, selm2, selm3, selm4,
names = c("ME1", "ME2", "ME3", "ME4"),
show_elements = TRUE) +
ggthemes::scale_fill_stata()
blue_mean <-
df_traits_long |>
mean_by(name, ME, GEN, .vars = value)
ovmean <-
df_traits_long |>
mean_by(name, ME, .vars = value)
# selected
selected <-
blue_mean |>
mutate(selected = case_when(
ME == "ME1" & GEN %in% selm1 ~ "yes",
ME == "ME2" & GEN %in% selm2 ~ "yes",
ME == "ME3" & GEN %in% selm3 ~ "yes",
ME == "ME4" & GEN %in% selm4 ~ "yes",
TRUE ~ "no"
)) |>
mean_by(name, ME, selected) |>
filter(selected == "yes")
ds_mper <-
ovmean |>
rename(xo = value) |>
left_join(selected |> rename(xs = value)) |>
dplyr::select(-selected) |>
mutate(sd_perc =  (xs - xo) / xo * 100,
goal = case_when(
name %in% c("BTL", "EH", "GMC", "PH") ~ "Negative desired gains",
TRUE ~ "Positive desired gains"
),
negative = ifelse(sd_perc <= 0, "Negative", "Positive"))
ds_mper
stab <-
waas %>%
mutate(stab = map(data,
~.x %>% .[["stability"]] |>
rownames_to_column("GEN"))) |>
unnest(stab) |>
select(-data) |>
pivot_longer(GMC:HSW)
stab_ovmean <-
stab |>
mean_by(name, ME, .vars = value)
# selected
selected_stab <-
stab |>
mutate(selected = case_when(
ME == "ME1" & GEN %in% selm1 ~ "yes",
ME == "ME2" & GEN %in% selm2 ~ "yes",
ME == "ME3" & GEN %in% selm3 ~ "yes",
ME == "ME4" & GEN %in% selm4 ~ "yes",
TRUE ~ "no"
)) |>
mean_by(name, ME, selected) |>
filter(selected == "yes")
ds_stab <-
stab_ovmean |>
rename(xo = value) |>
left_join(selected_stab |> rename(xs = value)) |>
select(-selected) |>
mutate(sd_perc =  (xs - xo) / xo * 100,
negative = ifelse(sd_perc <= 0, "Negative", "Positive"))
left_join(ds_mper, ds_stab)
left_join(ds_mper, ds_stab, by = c("name", "ME"))
left_join(ds_mper, ds_stab, by = c("name", "ME")) |> arrange(ME)
left_join(ds_mper, ds_stab, by = c("name", "ME")) |> arrange(ME) |> relocate(ME, .before = name)
left_join(ds_mper, ds_stab, by = c("name", "ME")) |> arrange(ME) |> relocate(ME, .before = name) |> export("data/gains.xlsx")
left_join(ds_mper, ds_stab, by = c("name", "ME")) |> arrange(ME) |> relocate(ME, .before = name) |> export("data/gains.xlsx")
gains <- import("data/gains.xlsx")
gains
?add_header_above(
?add_header_above()
?add_header_above()
gains |>
gains |>
print_table() |>
add_header_above(c("" = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table() |>
add_header_above(c("" = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table()
gains |>
print_table()
gains |>
print_table(caption = "test") |>
add_header_above(c("" = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table(caption = "test")
gains |>
print_table(caption = "test")
head(mtcars)
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
gains |>
print_table(caption = "test") |>
add_header_above(c("", "Mean performance" = 3, "Stability" = 3))
gains |>
print_table(caption = "test") |>
add_header_above(c("", "Mean performance" = 3, "Stability" = 4))
gains |>
print_table(caption = "test") |>
add_header_above(c("Trait" = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table(caption = "test") |>
set_names(c("ME", "TRAIT", "xo", "xs", "SD", "xo", "xs", "SD")) |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
print_table(caption = "test") |>
set_names(c("ME", "TRAIT", "xo", "xs", "SD", "xo", "xs", "SD"))
gains |>
set_names(c("ME", "TRAIT", "xo", "xs", "SD", "xo", "xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
set_names(c("ME", "TRAIT", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3))
gains |>
set_names(c("ME", "TRAIT", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3),
underline = TRUE)
gains |>
set_names(c("ME", "TRAIT", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3),
strikeout = TRUE)
gains |>
set_names(c("ME", "TRAIT", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3),
bold = TRUE)
gains |>
set_names(c("ME", "TRAIT", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "test") |>
add_header_above(c(" " = 2, "Mean performance" = 3, "Stability" = 3),
align = "l")
mgidi_mod <- readRDS("data/mgidi.Rdata")
c1 <- mgidi_mod$mgidi[[1]]$cormat
c2 <- mgidi_mod$mgidi[[2]]$cormat
c3 <- mgidi_mod$mgidi[[3]]$cormat
c4 <- mgidi_mod$mgidi[[4]]$cormat
corM1p <-
c1 |>
network_plot(legend_position = "bottom",
min_cor = 0.2)
corM2p <-
c2 |>
network_plot(legend_position = "bottom",
min_cor = 0.2)
corM3p <-
c3 |>
network_plot(legend_position = "bottom",
min_cor = 0.2)
corM4p <-
c4 |>
network_plot(legend_position = "bottom",
min_cor = 0.2)
arrange_ggplot(corM1p, corM2p, corM3p, corM4p,
guides = "collect",
tag_levels = "a")
bind_cols(corr_focus(c1, GY) |> rename(GY_ME1 = GY),
corr_focus(c2, GY)[,2] |> rename(GY_ME2 = GY),
corr_focus(c3, GY)[,2] |> rename(GY_ME3 = GY),
corr_focus(c4, GY)[,2] |> rename(GY_ME4 = GY))
corM1p <-
c1 |>
network_plot(legend_position = "bottom",
min_cor = 0.3)
corM2p <-
c2 |>
network_plot(legend_position = "bottom",
min_cor = 0.3)
corM3p <-
c3 |>
network_plot(legend_position = "bottom",
min_cor = 0.3)
corM4p <-
c4 |>
network_plot(legend_position = "bottom",
min_cor = 0.3)
arrange_ggplot(corM1p, corM2p, corM3p, corM4p,
guides = "collect",
tag_levels = "a")
arrange_ggplot(corM1p, corM2p, corM3p, corM4p,
guides = "collect",
tag_levels = "A")
pairs_mantel(as.lpcor(c1, c2, c3, c4),
names = c("ME1", "ME2", "ME3", "ME4"))
bind_cols(corr_focus(c1, GY) |> rename(GY_ME1 = GY),
corr_focus(c2, GY)[,2] |> rename(GY_ME2 = GY),
corr_focus(c3, GY)[,2] |> rename(GY_ME3 = GY),
corr_focus(c4, GY)[,2] |> rename(GY_ME4 = GY))
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(metan)
library(rnaturalearth)
library(lme4)
library(lmerTest)
library(broom.mixed)
library(tidyverse)
library(kableExtra)
print_table = function(df,
caption,
digits = 4,
full_width = TRUE,
col.names = NA,
longtable = FALSE,
scape = FALSE,
html_opt = c("striped", "responsive")){
kable(df,
align  = "l",
col.names = col.names,
booktabs = T,
digits = digits,
format = "html",
linesep = "",
caption = caption,
escape = scape,
longtable = longtable) %>%
kable_classic(lightable_options = "striped", html_font = "sans", full_width = full_width) %>%
kable_styling(bootstrap_options = html_opt)
}
# get variance components
get_vcomp <- function(model){
model |>
tidy(effects = "ran_pars") |>
mutate(variance = estimate ^ 2) |>
dplyr::select(group, variance)
}
# get lrt
get_lrt <- function(model){
model |>
ranova() |>
as.data.frame() |>
mutate(p_val = `Pr(>Chisq)`) |>
rownames_to_column("term") |>
dplyr::select(term, AIC, LRT, p_val) |>
mutate(term = str_sub(term, start = 6, end = -2))
}
mgidi_mod <- readRDS("data/mgidi.Rdata")
variances <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "PCA"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "PCA"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "PCA"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "PCA")
) |>
bind_rows(.id = "model")
loadings <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "FA"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "FA"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "FA"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "FA")
) |>
bind_rows(.id = "model")
View(loadings)
View(loadings)
View(mgidi_mod)
View(mgidi_mod[[3]][[1]])
View(mgidi_mod[[3]][[1]][["sel_dif"]])
loadings <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "SE"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "FA"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "FA"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "FA")
) |>
bind_rows(.id = "model")
gains <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "sel_dif"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "sel_dif"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "sel_dif"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "sel_dif")
) |>
bind_rows(.id = "model")
View(gains)
View(gains)
gains <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "sel_dif_traits"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "sel_dif"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "sel_dif"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "sel_dif")
) |>
bind_rows(.id = "model")
View(mgidi_mod[[3]][[1]][["data"]])
gains
factors <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "sel_dif"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "sel_dif"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "sel_dif"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "sel_dif")
) |>
bind_rows(.id = "model") |>
select(model, VAR, Factor)
gains <-
import("data/gains.xlsx") |>
left_join(factors)
gains
gains
gains <-
import("data/gains.xlsx")
gains <-
import("data/gains.xlsx") |>
left_join(factors)
import("data/gains.xlsx")
factors <-
list(
ME1 = gmd(mgidi_mod$mgidi[[1]], "sel_dif"),
ME2 = gmd(mgidi_mod$mgidi[[2]], "sel_dif"),
ME3 = gmd(mgidi_mod$mgidi[[3]], "sel_dif"),
ME4 = gmd(mgidi_mod$mgidi[[4]], "sel_dif")
) |>
bind_rows(.id = "model") |>
select(model, VAR, Factor) |>
rename(ME = model, TRAIT = VAR)
gains <-
import("data/gains.xlsx") |>
left_join(factors)
gains |>
set_names(c("ME", "TRAIT", "Factor", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "Selecion differentials for mean performance and stability of the studied traits in the four delineated mega environments.") |>
add_header_above(c(" " = 3, "Mean performance" = 3, "Stability" = 3),
align = "l")
gains <-
import("data/gains.xlsx") |>
left_join(factors) |>
relocate(Factor, .after = TRAIT)
gains |>
set_names(c("ME", "TRAIT", "Factor", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "Selecion differentials for mean performance and stability of the studied traits in the four delineated mega environments.") |>
add_header_above(c(" " = 3, "Mean performance" = 3, "Stability" = 3),
align = "l")
gains <-
import("data/gains.xlsx") |>
left_join(factors) |>
relocate(Factor, .after = TRAIT) |>
arrange(ME, Factor)
gains |>
set_names(c("ME", "TRAIT", "Factor", "Xo", "Xs", "SD", "Xo", "Xs", "SD")) |>
print_table(caption = "Selecion differentials for mean performance and stability of the studied traits in the four delineated mega environments.") |>
add_header_above(c(" " = 3, "Mean performance" = 3, "Stability" = 3),
align = "l")
