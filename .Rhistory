library(tidyverse)
library(metan)
library(rnaturalearth)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
print_table = function(df,
caption,
digits = 2,
full_width = TRUE,
col.names = NA,
longtable = FALSE,
scape = FALSE,
html_opt = c("striped", "responsive")){
kable(df,
align  = "l",
col.names = col.names,
booktabs = T,
digits = digits,
format = "html",
linesep = "",
caption = caption,
escape = scape,
longtable = longtable) %>%
kable_classic(lightable_options = "striped", html_font = "sans", full_width = full_width) %>%
kable_styling(bootstrap_options = html_opt)
}
# Chunk 4
# Include a column to mega-environment
df_traits <-
import("https://bit.ly/df_traits") |>
metan::as_factor(1:3)
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
# Chunk 5
mod_global <- readRDS("data/mod_global.RData")
## mtsi global
SI <- 25
mtsi_global <- mtsi(mod_global, SI = SI, verbose = FALSE)
sel_gen <- mtsi_global$sel_gen
# Chunk 6
mod_me <- readRDS("data/mod_me.RData")
## mtsi me1
mtsi_me1 <- mtsi(mod_me$data[[1]], SI = SI)
## mtsi me2
mtsi_me2 <- mtsi(mod_me$data[[2]], SI = SI)
## mtsi me3
mtsi_me3 <- mtsi(mod_me$data[[3]], SI = SI)
mod_me <- readRDS("data/mod_me.RData")
## mtsi me1
mtsi_me1 <- mtsi(mod_me$data[[1]], SI = SI, verbose = FALSE)
## mtsi me2
mtsi_me2 <- mtsi(mod_me$data[[2]], SI = SI, verbose = FALSE)
## mtsi me3
mtsi_me3 <- mtsi(mod_me$data[[3]], SI = SI, verbose = FALSE)
models <-
list(
FA1 = gmd(mtsi_me1, "FA"),
FA2 = gmd(mtsi_me2, "FA"),
FA3 = gmd(mtsi_me3, "FA")
)
bind_rows(models, .id = "model") |>
print_table()
library(kableExtra)
print_table = function(df,
caption,
digits = 2,
full_width = TRUE,
col.names = NA,
longtable = FALSE,
scape = FALSE,
html_opt = c("striped", "responsive")){
kable(df,
align  = "l",
col.names = col.names,
booktabs = T,
digits = digits,
format = "html",
linesep = "",
caption = caption,
escape = scape,
longtable = longtable) %>%
kable_classic(lightable_options = "striped", html_font = "sans", full_width = full_width) %>%
kable_styling(bootstrap_options = html_opt)
}
bind_rows(models, .id = "model") |>
print_table()
bind_rows(models, .id = "model") |>
print_table(caption = "Facot loadings")
models <-
list(
ME1 = gmd(mtsi_me1, "FA"),
ME2 = gmd(mtsi_me2, "FA"),
ME3 = gmd(mtsi_me3, "FA")
)
bind_rows(models, .id = "model") |>
print_table(caption = "Facot loadings")
# Chunk 1: global_options
knitr::opts_chunk$set(cache = TRUE, comment = "##", collapse = TRUE)
# Chunk 2
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(corrr)
library(tidyverse)
library(metan)
library(rnaturalearth)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
df_traits <-
import("https://bit.ly/df_traits") |>
metan::as_factor(1:3)
# grain yield mean in each environment
df_gy <-
df_traits |>
means_by(ENV, .vars = GY)
df_var <-
df_traits |>
means_by(ENV, GEN, .vars = GY) |>
var_by(ENV) |>
rename(VAR = GY)
# Chunk 4
env_data <- import("https://bit.ly/df_climate")
# Chunk 5
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
# Include a column to mega-environment
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
# Chunk 6
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_me <- means_by(env_data_d, name, me)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
ggsave("figs/S1.pdf", width = 12, height = 5)
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
env_data_me
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_me <- means_by(env_data_d, name, me)
means_by(env_data_d, name, me)
env_data_d
rbind(df_gy_dist, env_data_d)
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-env)
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(me, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-env)
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(me, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-env)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
df_gy_dist
env_data_d
# long format for grain yield
df_gy_dist <-
df_traits |>
select(env, GY) |>
mutate(name = "GY", .after = env) |>
rename(value = GY)
df_traits
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
# Include a column to mega-environment
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_me <- means_by(env_data_d, name, me)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
env_data_me
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
# Include a column to mega-environment
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
env_data_me
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
# Chunk 1: global_options
knitr::opts_chunk$set(cache = TRUE, comment = "##", collapse = TRUE)
# Chunk 2
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(corrr)
library(tidyverse)
library(metan)
library(rnaturalearth)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
df_traits <-
import("https://bit.ly/df_traits") |>
metan::as_factor(1:3)
# grain yield mean in each environment
df_gy <-
df_traits |>
means_by(ENV, .vars = GY)
df_var <-
df_traits |>
means_by(ENV, GEN, .vars = GY) |>
var_by(ENV) |>
rename(VAR = GY)
# Chunk 4
env_data <- import("https://bit.ly/df_climate")
# Chunk 5
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
# Include a column to mega-environment
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
# Chunk 6
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_me <- means_by(env_data_d, name, me)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
ggsave("figs/S1.pdf", width = 12, height = 5)
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
env_data_d
#
me2 <- c("YC2020", "SX2020", "JS2020", "NY2020")
me3 <- c("GC2020", "SZ2020", "JN2020", "LZ2020")
me1 <- set_difference(as.character(unique(df_traits$ENV)), me2, me3)
# Include a column to mega-environment
df_traits <-
df_traits |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3"))
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
env_data_me
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_memean <- means_by(env_data_d, name, me)
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_memean <- means_by(env_data_d, name, me)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
prec <-
env_data_me %>%
sum_by(env, .vars = prec)
pca <-
env_data_me |>
remove_cols(me, prec, LON:YYYYMMDD, daysFromStart) %>%
pivot_longer(-env) %>%
means_by(env, name) %>%
pivot_wider(names_from = name, values_from = value) %>%
# set_names(c("env", varnames)) %>%
left_join(prec, by = "env") %>%
left_join(df_gy,  by = c("env" = "ENV")) %>%
left_join(df_var,  by = c("env" = "ENV")) %>%
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3")) |>
as.data.frame() |>
column_to_rownames("env")
pca_model <- PCA(pca,
quali.sup = 13,
graph = FALSE)
# contribution of variables
fviz_contrib(pca_model, choice = "var")
# plot the distribution of envirotypes for dbp
variable <- "etp"
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative Frequency of Occurence')+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
