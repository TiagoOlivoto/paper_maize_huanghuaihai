library(superheat)
library(ggridges)
library(metan)
library(rnaturalearth)
library(lme4)
library(lmerTest)
library(broom.mixed)
library(tidyverse)
library(ggsn)
# a ggplot2 theme for the plots
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
df_traits <-
import("data/df_traits.csv") |>
metan::as_factor(1:6)
# long data
df_traits_long <-
df_traits |>
pivot_longer(GMC:HSW)
# grain yield mean in each environment
df_gy <-
df_traits |>
mean_by(ME, YEAR, .vars = GY)
# genotypic variance in each mega-environment
df_var_gy <-
df_traits |>
group_by(YEAR, ME) |>
do(lmer(GY ~(1|GEN), data = .) |>
tidy(effects = "ran_pars") |>
filter(group == "GEN") |>
transmute(var = estimate^2))
# Chunk 4
china <-
ne_states(country = c("china", "taiwan"),
returnclass = "sf")
locs <-
import("https://bit.ly/local_info") %>%
distinct(Lat, .keep_all = TRUE)
china <-
mutate(china,
Province = ifelse(name %in% locs$Province, name, NA))
png("figs/fig1_map1.jpeg", width = 10, height = 7, units = "in", res = 600)
ggplot(data = china) +
geom_sf(aes(fill = Province), size = 0.2) +
ggthemes::theme_map() +
scale_fill_discrete(na.value = "gray97",
labels = c(unique(locs$Province), "others")) +
theme(legend.position = "none")
dev.off()
png("figs/fig1_map2.jpeg", width = 10, height = 7, units = "in", res = 600)
zoom <-
ggplot(data = china) +
geom_sf(aes(fill = Province), size = 0.2) +
ggthemes::theme_map() +
scale_fill_discrete(na.value = "gray97",
labels = c(unique(locs$Province), "others")) +
geom_point(data = locs,
aes(x = Lon, y = Lat, size = Altitude),
color = "black",
fill = "red",
shape = 21) +
geom_label_repel(data = locs,
aes(label = Location,
x = Lon,
y = Lat),
fill = "green",
color = "black",
segment.color = 'black',
force = 38,
size = 4) +
theme(legend.position = c(0.95, 0.1)) +
theme_minimal() +
theme(legend.position = c(.95, 0.55)) +
scalebar(dist = 200,
x.min = 109,
x.max = 128,
y.min = 29.5,
y.max = 42,
dist_unit = "km",
transform = TRUE,
model = "WGS84") +
xlim(c(109, 128)) +
ylim(c(28, 42)) +
labs(x = "Longitude",
y = "Latitude")
north2(zoom, 0.9, .1)
dev.off()
# Chunk 6
env_data <- readRDS("data/env_data.Rdata")
info <-
env_data |>
dplyr::select(env, LON, LAT) |>
mean_by(env)
df_gy_loc <-
df_traits |>
mean_by(LOC, .vars = GY)
env_wider <-
env_data |>
select(env, year, daysFromStart, TMED:RTA) |>
pivot_wider(names_from = "year",
values_from = TMED:RTA) |>
left_join(info) |>
relocate(LON, LAT, .after = env) |>
mutate(MM = 1,
DD = 1,
DOY = 1,
YYYYMMDD = 1,
YEAR = 1,
.after = env)
saveRDS(env_wider, "data/env_wider.Rdata")
# Chunk 7
id_var <- names(env_wider)[10:ncol(env_wider)]
EC <-
W_matrix(env.data = env_wider,
env.id = "env",
var.id = id_var,
by.interval = TRUE,
time.window = c(0, 30, 60, 90, 120, 150),
QC = TRUE,
sd.tol = 3)
saveRDS(EC, "data/EC.Rdata")
# Chunk 8
distances <-
env_kernel(env.data = EC,
gaussian = TRUE)
d <-
superheat(distances[[2]],
heat.pal = c("#b35806", "white", "#542788"),
pretty.order.rows = TRUE,
pretty.order.cols = TRUE,
col.dendrogram = TRUE,
legend.width = 4,
left.label.size = 0.1,
bottom.label.text.size = 5,
bottom.label.size = 0.2,
bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
ggsave(filename = "figs/fig2_heat_env2.pdf",
plot = d$plot,
width = 11,
height = 10)
env_data <-
env_data |>
mutate(me = case_when(
env %in% c("Yicheng") ~ "ME1",
env %in% c("Suixi", "Jieshou", "Nanyang") ~ "ME2",
env %in% c("Shenzhou", "Gaocheng", "Handan", "Dezhou") ~ "ME3",
env %in% c("Laizhou", "Jinan") ~ "ME4"
),
.after = env)
# Chunk 9
env_data_m <-
env_data |>
select(-daysFromStart) |>
mean_by(me, .vars = TMED:RTA) |>
column_to_rownames("me")
# compute the PCA with
pca_model_h <- PCA(env_data_m,
graph = FALSE)
bp1 <-
fviz_pca_biplot(pca_model_h,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal() +
labs(title = "Long-term weather (20 years)")
# Chunk 11
env_data_trial <- import("data/env_data_trial.xlsx")
# Chunk 12
names_var <- names(env_data_trial)[11:ncol(env_data_trial)]
pca_2019 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2019) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca_2020 <-
env_data_trial |>
mean_by(ME, YEAR, .vars = names_var) |>
metan::as_factor(1:2) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
filter(YEAR == 2020) |>
left_join(df_gy) |>
left_join(df_var_gy) |>
remove_cols(YEAR) |>
column_to_rownames("ME")
pca2 <-
env_data_trial |>
mean_by(ME, .vars = names_var) |>
left_join(df_gy |> mean_by(ME)) |>
left_join(df_var_gy|> mean_by(ME)) |>
column_to_rownames("ME")
# compute the PCA with
pca2019 <- PCA(pca_2019, graph = FALSE)
pca2020 <- PCA(pca_2020, graph = FALSE)
pca_model2 <- PCA(pca2,  graph = FALSE)
bip1 <-
fviz_pca_biplot(pca2019,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal() +
labs(title = "Data for 2019 trials")
bip2 <-
fviz_pca_biplot(pca2020,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal() +
labs(title = "Data for 2020 trials")
bip3 <-
fviz_pca_biplot(pca_model2,
repel = TRUE,
col.var = "steelblue",
title = NULL) +
coord_equal() +
labs(title = "Average data")
arrange_ggplot(bp1, bip1, bip2, bip3,
tag_levels = "A")
ggsave("figs/fig3_pca.jpeg", width = 11, height = 11)
# Chunk 13
names.window <- c('1-intial growing','2-leaf expansion I','3-leaf expansion II','4-flowering','5-grain filling', "")
out <-
env_data_trial |>
concatenate(ME, YEAR, .after = YEAR, new_var = env) |>
env_typing(env.id = c("YEAR, ME"),
var.id = names_var,
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 120),
names.window = names.window,
quantiles = c(.01, .25, .50, .75, .975, .99)) |>
separate(env, into = c("ME", "YEAR")) |>
separate(env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# Chunk 14
# plot the distribution of envirotypes for dbp
variable <- "VPD"
p1 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(YEAR~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency for vapor pressure deficit',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "PETP"
p2 <-
out |>
subset(var == variable) |> # change the variable here
mutate(freq = as_factor(freq),
freq = fct_relevel(freq, "(-13.1,-9.95]", "(-9.95,-7.54]",
"(-7.54,-2.13]", "(-2.13,31.5]",
"(31.5,47.8]" )) |>
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency for deficit by precipitation',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "TMIN"
p3 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
# plot the distribution of envirotypes for dbp
variable <- "TMAX"
p4 <-
out |>
subset(var == variable) |> # change the variable here
# mutate()
ggplot() +
geom_bar(aes(x=Freq, y=ME,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2) +
facet_grid(YEAR~interval) +
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
labs(x = 'Relative frequency',
y = "Mega-Environment",
fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1)) +
ggthemes::scale_fill_stata()
arrange_ggplot(p1, p2,
ncol = 1,
tag_levels = "A")
ggsave("figs/fig4_typology_vpd.jpeg", width = 10, height = 5)
# Chunk 15
# get variance components
get_vcomp <- function(model){
model |>
tidy(effects = "ran_pars") |>
mutate(variance = estimate ^ 2) |>
dplyr::select(group, variance)
}
# get lrt
get_lrt <- function(model){
model |>
ranova() |>
as.data.frame() |>
mutate(p_val = `Pr(>Chisq)`) |>
rownames_to_column("term") |>
dplyr::select(term, AIC, LRT, p_val) |>
mutate(term = str_sub(term, start = 6, end = -2))
}
# Chunk 16
# fitted models
mod <-
df_traits_long |>
group_by(name) |>
select(-REP) |>
rename(REP = REP2) |>
doo(~ lmer(value ~ (1|ME) +   (1|GEN) + (1|GEN:YEAR) + (1|GEN:ME) + (1|GEN:ME:YEAR) + (1|YEAR/ME/REP),
data = .))
# Chunk 17
lrt <-
mod |>
mutate(ranova = map(data, ~.x |> get_lrt())) |>
dplyr::select(-data) |>
unnest(ranova)
lrt_wide <-
lrt |>
dplyr::select(name, term, p_val) |>
remove_rows_na() |>
pivot_wider(names_from = name, values_from = p_val)
export(lrt_wide, "data/lrt.xlsx")
# vcomp
vcomp <-
mod |>
mutate(vcomp = map(data, ~.x |> get_vcomp())) |>
dplyr::select(-data) |>
unnest(vcomp) |>
mutate(group = fct_relevel(group, "YEAR", "ME", "ME:YEAR", "GEN", "GEN:YEAR", "GEN:ME", "GEN:ME:YEAR", "REP:(ME:YEAR)", "Residual"))
vcomp_wide <-
vcomp |>
pivot_wider(names_from = name, values_from = variance)
p1 <-
ggplot(vcomp, aes(name, variance, fill = group)) +
geom_bar(stat = "identity",
position = "fill",
color = "white",
width = 1) +
my_theme +
theme(legend.position = "right") +
scale_x_discrete(expand = expansion(0)) +
scale_y_continuous(expand = expansion(0),
labels = scales::label_percent()) +
ggthemes::scale_fill_stata() +
labs(x = "Traits",
y = "Percentage of variance of phenotypic mean values (%)",
fill = "Source")
vcomp_mean <-
import("data/vcomp_wide.xlsx", sheet = "mean2") |>
pivot_longer(-group)
p2 <-
ggplot(vcomp_mean, aes(name, value, fill = group)) +
geom_bar(stat = "identity",
position = "fill",
color = "white",
width = 1) +
my_theme +
theme(legend.position = "right") +
scale_x_discrete(expand = expansion(0)) +
scale_y_continuous(expand = expansion(0),
labels = scales::label_percent()) +
ggthemes::scale_fill_stata() +
labs(x = "Traits",
y = "Percentage of the variance of a genotype mean (%)",
fill = "Source")
arrange_ggplot(p1, p2,
tag_levels = "A")
var(df_traits$GY)
var(df_traits$GWE)
arrange_ggplot(p1, p2,
tag_levels = "A")
ggsave("figs/fig5_vcomp.jpeg", width = 10, height = 5)
ggsave("figs/fig5_vcomp.jpeg", width = 10, height = 4)
# it is suggested to use the dev version of metan package
# remotes::install_github("TiagoOlivoto/metan")
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(metan)
library(rnaturalearth)
library(lme4)
library(lmerTest)
library(broom.mixed)
library(tidyverse)
library(ggsn)
# a ggplot2 theme for the plots
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
vcomp_mean <-
import("data/vcomp_wide.xlsx", sheet = "mean2") |>
pivot_longer(-group)
vcomp_mean <-
import("data/h_mean.xlsx") |>
pivot_longer(-group)
# p2 <-
ggplot(vcomp_mean, aes(name, value, fill = group)) +
geom_bar(stat = "identity",
position = "fill",
color = "white",
width = 1) +
my_theme +
theme(legend.position = "right") +
scale_x_discrete(expand = expansion(0)) +
scale_y_continuous(expand = expansion(0),
labels = scales::label_percent()) +
ggthemes::scale_fill_stata() +
labs(x = "Traits",
y = "Percentage of the variance of a genotype mean (%)",
fill = "Source")
# vcomp
vcomp <-
mod |>
mutate(vcomp = map(data, ~.x |> get_vcomp())) |>
dplyr::select(-data) |>
unnest(vcomp) |>
mutate(group = fct_relevel(group, "YEAR", "ME", "ME:YEAR", "GEN", "GEN:YEAR", "GEN:ME", "GEN:ME:YEAR", "REP:(ME:YEAR)", "Residual"))
install.packages("varTestnlme")
library(varTestnlme)
library(lme4)
data(Orthodont, package = "nlme")
# fit the two models under H1 and H0
m1 <- lmer(distance ~ 1 + Sex + age + age*Sex +
(0 + age | Subject), data = Orthodont, REML = FALSE)
m0 <- lm(distance ~ 1 + Sex + age + age*Sex, data = Orthodont)
# compare them (order is important: m1 comes first)
varCompTest(m1,m0,pval.comp="bounds")
# compare them (order is important: m1 comes first)
varCompTest(m1,m0,pval.comp="bounds")
lmerTest::ranova(m1)
lmerTest::ranova(m0)
