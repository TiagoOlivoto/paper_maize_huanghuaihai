bottom.label.text.angle = 90,
legend.text.size = 17,
heat.lim = c(0, 1),
padding = 0.5,
legend.height=0.2)
ggsave(filename = "figs/fig2_heat_env.png",
plot = d$plot,
width = 10,
height = 10)
cor(env_data_me$etp, env_data_me$sihs)
View(mtsi_global)
View(mtsi_global[["stat_dif_trait"]])
8/9
# Chunk 1: global_options
knitr::opts_chunk$set(cache = FALSE,
comment = "##",
collapse = TRUE,
warning = FALSE,
message = FALSE)
# Chunk 2
# it is suggested to use the dev version of metan package
# remotes::install_github("TiagoOlivoto/metan")
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(tidyverse)
library(metan)
library(rnaturalearth)
# a ggplot2 theme for the plots
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
df_traits <-
import("https://bit.ly/df_traits") |>
metan::as_factor(1:3)
# grain yield mean in each environment
df_gy <-
df_traits |>
means_by(ENV, .vars = GY)
View(df_traits)
df_traits |> means_by(me)
df_traits |> means_by(ENV)
df_traits |> means_by(me)
library(metan)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"))
plot(mod)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"), scaling = 0)
plot(mod)
data_ge2
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"))
plot(mod)
# GT biplot for all numeric variables
mod <- gtb(data_ge2, GEN, resp = contains("E"), svp = 1)
plot(mod)
library(tidyverse)
df <- clipr::read_clip()
df <- metan::clip_read()
View(df)
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - media)
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean)
View(df2)
ggplot(df2, aes(desvio)) + geom_point()
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = 1:15)
df2
ggplot(df2, aes(desvio, id)) + geom_point()
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = paste("Planta", 1:15))
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Altura da planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_point(color = "blue",
size = 3) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = as.factor(paste("Planta", 1:15)),
id = fct_relevel(id, paste("Planta", 1:15)))
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
# scale_x_continuous(limits = c(230, 300)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios da altura de planta (cm)",
y = "Planta")
desc_stat(df2, planta)
d <- desc_stat(df2, planta)
View(d)
max(df2$planta)
20-5.8
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.2)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.1)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação a média da altura de planta (cm)",
y = "Planta")
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação à média da altura de planta (cm)",
y = "Planta")
df2 <-
df |>
mutate(mean = mean(planta),
desvio = planta - mean,
id = as.factor(paste("Muda", 1:15)),
id = fct_relevel(id, paste("Muda", 1:15)))
ggplot(df2, aes(desvio, id)) +
geom_segment(aes(x = 0,
xend = desvio,
y = id,
yend = id)) +
geom_point(color = "blue",
size = 3) +
geom_vline(xintercept = 0, linetype = 2, color = "red") +
geom_text(aes(x = desvio, y = id, label = round(desvio, digits = 3),
hjust = ifelse(desvio < 0, 1.5, -0.5))) +
scale_x_continuous(expand = expansion(0.15)) +
theme(panel.grid.minor = element_blank()) +
labs(x = "Desvios em relação à média da altura de planta (cm)",
y = "Muda")
10-4.2
10+4.2
View(df)
View(df2)
rio::export(df2, "test.xlsx")
getwd()
qt(0.975, 14)
2.144787 * 0.7758
1/4+3/4
3/4
library(pliman)
library(pliman)
library(rio)
set_wd_here()
df <- import("area_foliar.xlsx")
View(df)
df |> select_non_numeric_cols()
df |> select_non_numeric_cols() |> Image()
df |> select_non_numeric_cols() |> image()
df |> select_non_numeric_cols() |> as.matrix() |> image()
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols() |>
as.matrix() |>
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
library(pliman)
library(rio)
set_wd_here()
df <- import("area_foliar.xlsx")
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
library(metan)
mat <-
df |>
select_non_numeric_cols() |>
as.matrix() |>
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
df |>
select_non_numeric_cols()
mat <-
df |>
select_non_numeric_cols() |>
as.matrix()
image(mat)
View(mat)
mat <-
df |>
select_numeric_cols() |>
as.matrix()
image(mat)
image(t(mat))
library(metan)
predict.gge
?gge
mod <- gge(data_ge, ENV, GEN, GY)
plot(mod)
predict(mod)
mod <- gge(data_ge |>
remove_rows(1:3),
ENV, GEN, GY)
plot(mod)
predict(mod)
mod <- gge(data_ge |> remove_rows(1:3),
ENV, GEN, GY)
predict(mod)
?impute_missing_val
# Chunk 1: global_options
knitr::opts_chunk$set(cache = TRUE,
comment = "##",
collapse = TRUE,
warning = FALSE,
message = FALSE)
xaringanExtra::use_panelset()
# Chunk 2
library(EnvRtype)
library(rio)
library(factoextra)
library(FactoMineR)
library(ggrepel)
library(ggh4x)
library(superheat)
library(ggridges)
library(tidyverse)
library(metan)
library(rnaturalearth)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
df_traits <- import("https://bit.ly/df_traits")
# grain yield mean in each environment
df_gy <-
df_traits |>
means_by(ENV, .vars = GY)
df_var <-
df_traits |>
means_by(ENV, GEN, .vars = GY) |>
var_by(ENV) |>
rename(VAR = GY)
# Chunk 4
env_data_me <- import("https://bit.ly/df_climate")
env_data <- env_data_me |> remove_cols(me)
# Chunk 5
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
# Chunk 6
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
env_data_memean <- means_by(env_data_d, name, me)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
# Chunk 7
pca <-
import("https://bit.ly/df_pca") |>
column_to_rownames("env")
# compute the PCA with
pca_model <- PCA(pca,
quali.sup = 14,
graph = FALSE)
# contribution of variables
fviz_contrib(pca_model, choice = "var")
# Chunk 8
names.window <- c('1-intial growing','2-leaf expansion I','3-leaf expansion II','4-flowering','5-grain filling', "")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("sihs", "tmax", "tmin", "dbp", "etp", "vpd", "rh"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 120),
names.window = names.window)
mes <-
distinct(df_traits, ENV, .keep_all = TRUE) |>
select(ENV, me)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop") |>
left_join(mes, by = c("env" = "ENV"))
# Chunk 9
# plot the distribution of envirotypes for dbp
variable <- "dbp"
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
as_factor(freq) |>
mutate(freq = fct_relevel(freq, "(-2.25,48.9]", "(-7.62,-2.25]", "(-9.94,-7.62]", "(-13.1,-9.94]")) |>
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative frequency of the deficit by precipitation')+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
ge_plot(df_traits, me, GEN, GY,
order_g = paste0("G", 1:26))
View(pca)
cor(pca$prec, pca$GY)
